{"version":3,"sources":["Components/Game.module.css","accets/yoda.png","accets/yoda2.png","Components/EnemyItem.jsx","Components/Counter.jsx","store/reducer.js","Components/Button.jsx","Components/Game.jsx","Components/App.js","serviceWorker.js","store/store.js","index.js"],"names":["module","exports","EnemyItem","state","itemClass","styles","item","disable","showResult","status","setState","clicked","missed","onPassRound","props","isAccent","incCount","setTimeout","className","this","onClick","alt","id","src","Yoda","show","Component","Counter","counter","countValue","initialState","items","accentId","clickId","reducer","action","type","map","m","a","Button","classButton","disabled","title","name","Game","interval","setInterval","randomNumber","console","log","accValue","Math","floor","random","incValue","wrapper","key","connect","dispatch","accentValue","App","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.115ea13b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Game_counter__3tYQM\",\"wrapper\":\"Game_wrapper__wYcF3\",\"item\":\"Game_item__G-o0g\",\"clicked\":\"Game_clicked__2n5wB\",\"missed\":\"Game_missed__M3M41\",\"image\":\"Game_image__2PUnM\",\"show\":\"Game_show__NvhQc\"};","module.exports = __webpack_public_path__ + \"static/media/yoda.ae2b62e4.png\";","module.exports = __webpack_public_path__ + \"static/media/yoda2.2bb2c9de.png\";","import React, {Component} from 'react';\nimport styles from './Game.module.css';\nimport './Game.module.css'\nimport Yoda2 from \"../accets/yoda2.png\"\nimport Yoda from \"../accets/yoda.png\";\n\nclass EnemyItem extends Component {\n\n    state = {\n        itemClass: styles.item,\n        disable: true,\n    };\n\n    showResult = (status) => {\n        switch (status) {\n            case  'clicked' :\n                this.setState({\n                    itemClass: styles.clicked\n                });\n                break;\n            case 'miss' :\n                this.setState({\n                        itemClass: styles.missed\n                    }\n                );\n                break;\n            default :\n                this.setState({\n                        itemClass: styles.item\n                    }\n                )\n        }\n    };\n\n    onPassRound = () => {\n        if (this.props.isAccent) {\n            // отображается рамка успешного попадания\n            this.showResult('clicked');\n            // обновляется счетчик\n            this.props.incCount();\n            // как минимум через 300мс рамка исчезает\n            setTimeout(\n                () => {\n                    this.showResult();\n                }, 300);\n        } else {\n            // отображается рамка ошибочного клика\n            this.showResult('miss');\n            // как минимум через 300мс рамка исчезает\n            setTimeout(\n                () => {\n                    this.showResult();\n                }, 300);\n        }\n\n    };\n\n    render() {\n        // let YodaImage = !this.state.disable ? Yoda : Yoda2;\n        return (\n            <div className={this.state.itemClass}\n                 onClick={this.onPassRound}>\n                {this.props.isAccent ?\n                    <img alt='EnemyImage'\n                         id={this.props.id}\n                         src={Yoda}\n                         className={styles.show}\n                    />\n                    : <div className={styles.show}>{null}</div>\n                }\n            </div>\n        );\n\n    }\n}\n\nexport default EnemyItem;\n","import React from 'react';\nimport styles from './Game.module.css';\n\nfunction Counter(props) {\n    return (\n        <div className={styles.counter} onClick={props.onClick}>\n            {props.countValue}\n        </div>\n    );\n}\n\nexport default Counter;\n","export const CLICK_ITEM = 'CLICK_ITEM';\nexport const ACCENT_ITEM = 'ACCENT_ITEM';\nexport const INC_COUNT = 'INC_COUNT';\n\n// let randomNumber = () => {\n//     return Math.floor(Math.random() * 9 + 1);\n// };\n//\n// let a = randomNumber();\n\nconst initialState = {\n    countValue: 0,\n    items: [\n        {\n            id: 1,\n            isAccent: false\n        },\n        {\n            id: 2,\n            isAccent: false\n        },\n        {\n            id: 3,\n            isAccent: false\n        },\n        {\n            id: 4,\n            isAccent: false\n        },\n        {\n            id: 5,\n            isAccent: false\n        },\n        {\n            id: 6,\n            isAccent: false\n        },\n        {\n            id: 7,\n            isAccent: false\n        },\n        {\n            id: 8,\n            isAccent: false\n        },\n        {\n            id: 9,\n            isAccent: true\n        },\n    ],\n    accentId: 1,\n    clickId: 2,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // case CLICK_ITEM:\n        //     return {\n        //         ...state,\n        //         clickId: action.clickId,\n        //     };\n        case ACCENT_ITEM:\n            return {\n                ...state,\n                items: state.items.map(m => {\n                    if (m.id === action.a) {\n                        return {\n                            ...m, isAccent: true\n                        }\n                    } else {\n                        return {\n                            ...m,\n                            isAccent: false\n                        }\n                    }\n                })\n            };\n        case INC_COUNT:\n            return {\n                ...state,\n                countValue: state.countValue + 1\n            };\n        default:\n            return state;\n    }\n};\nexport default reducer;\n\nexport const incValue = () => {\n    return ({type: INC_COUNT,})\n};\n\nexport const accentValue = (a) => {\n    return ({type: ACCENT_ITEM, a});\n};\n\n\n\n\n","import React from 'react';\nimport './App.css';\n\nconst Button = (props) => {\n\n    const onClick = () => props.onClick();\n\n    let classButton = \"button\";\n\n    {\n        props.disabled\n        ? classButton = \"disabled\"\n        : classButton = \"button\"\n    }\n\n    return (\n        <button className={classButton} title={props.name} disabled={props.disabled}\n                onClick={onClick}>\n            {props.name}\n        </button>\n    );\n};\n\nexport default Button;\n\n","import React, {Component} from 'react';\nimport styles from './Game.module.css';\nimport EnemyItem from \"./EnemyItem\";\nimport Counter from \"./Counter\";\nimport {connect} from \"react-redux\";\nimport {accentValue, incValue} from \"../store/reducer\";\nimport Button from \"./Button.jsx\";\n\n\nclass Game extends Component {\n\n\n    componentDidMount() {\n    }\n\n    interval = () => {\n        setInterval(() => {\n            let a = this.randomNumber();\n            console.log(a);\n            this.props.accValue(a)\n        }, 1000)\n    };\n\n    randomNumber = () => {\n        return Math.floor(Math.random() * 9 + 1);\n    };\n\n    incCount = () => {\n        this.props.incValue()\n    };\n\n    render() {\n\n        return (\n            <div className={styles.wrapper}>\n                {this.props.items.map(m => {\n                    return (<EnemyItem id={m.id}\n                                       isAccent={m.isAccent}\n                                       incCount={this.incCount}\n                                       key={m.id}\n                    />)\n                })}\n                <Counter countValue={this.props.countValue}/>\n                <Button onClick={this.interval} name='START'/>\n            </div>\n        );\n    }\n}\n\n\nlet mstp = (state) => {\n    return state;\n};\nlet mdtp = (dispatch) => {\n    return {\n        incValue: () => dispatch(incValue()),\n        accValue: (a) => dispatch(accentValue(a))\n    }\n};\n\n\nexport default connect(mstp, mdtp)(Game);\n","import React, {Component} from 'react';\nimport Game from \"./Game\";\n\n\nclass App extends Component {\n\n    render() {\n\n        return (\n            <div className='App'>\n                <Game/>\n            </div>\n        );\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import reducer from \"./reducer\";\nimport {createStore} from \"redux\";\n\n// let reducers = combineReducers({\n// });\n\n\nlet store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store} ><App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}